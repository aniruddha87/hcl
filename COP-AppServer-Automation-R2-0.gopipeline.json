{ 
 	"name": "COP-AppServer-Automation-R2.0", 
 	"group": "POC", 
 	"enable_pipeline_locking": true, 
 	"environment_variables": [], 
	"parameters": [{
		"environment": "dev",
		"ansible_home": "/home/cdp/anirban/workspace-np-r2/Production",
		"ec2": "environment/ec2_provision",
		"site": "DEV",
		"site_id": "D",
		"services": "environment/aws_services",
		"softwares": "softwares/playbooks",
		"apm": "stt1"
		}],
	"materials": [{ 
 		"url": "gitadmin@cdputaum001:/home/gitadmin/git-repos/GO.git" ,
		"branch": "dev",
 		"type": "git", 
 		"name": "mygit"
		},
		{	"filter":[{ 
			"ignore": [{
				"pattern": "gitadmin@cdputaum001:/home/gitadmin/git-repos/GO.git",
				"externals":[],
				"tools":[]
				}]	
			}]
		}
	],
	"stages": [
	{ 
	"name": "AWS-Services",
	"fetchMaterials": "false",
	"jobs": [{
		"name": "AWS RDS",
		"resources": ["Build"],
		"resource": ["Manager"],
		"tasks": [{
				"type": "exec",
				"run_if": "passed",
				"on_cancel": null,
				"command": "echo",
				"arguments": "AWS RDS Creation",
				"working_directory": null
			},
			{
				"type": "script",
				"run_if": "passed",
				"on_cancel": null,
				"command": "script",
				"arguments": ["echo sudo su - cdp -c ", " echo cd #{ansible_home}/#{services};ansible-playbook aws-services.yml -e type=services -e site1=#{site} -e site2=#{environment} -e site_id=#{site_id} --tags \"aws-rds\" -v"],
				"working_directory": null
			}]
	},
	{
		"name": "AWS-CES-S3",
		"resources": ["Build"],
		"resource": ["Manager"],
		"tasks": [ 
		{
			"type": "exec",
			"run_if": "passed",
			"on_cancel" : null,
			"command": "echo",
			"arguments": "AWS S3 Creation for CES",
			"working_directory": null
		},
		{
			"type": "script",
			"run_if": "passed",
			"on_cancel" : null,
			"command": "script",
			"arguments": [ "echo sudo su - cdp -c ", "echo cd #{ansible_home}/#{services};ansible-playbook aws-services.yml -e type=services -e site1=#{site} -e site2=#{environment} -e site_id=#{site_id} --tags \"aws-s3ces\" -v" ],
			"working_directory": null
		}]
	}]
}],
	"stages": [
	{
		"name": "EC2-Provision",
		"fetchMaterials": "false",
		"jobs": [{
			"resources": ["Build", "Manager"],
			"name": "AppServer_EC2_Provision",
			"tasks": [{
				"type": "exec",
				"run_if": "passed",
				"on_cancel": null,
				"command": "echo",
				"arguments": "AppServer EC2 Provision",
				"working_directory": null
			},
			{
				"type": "exec",
				"run_if": "passed",
				"on_cancel": null,
				"command": "script",
				"arguments": [" echo sudo su - cdp -c", "cd #{ansible_home}/#{ec2};ansible-playbook ec2-provision.yml -e type=servers -e site1=#{site}  -e site2=#{environment} -e site_id=#{site_id} --tags \"appserver1_az1,appserver2_az2\" -v &#xD;&#xD;", "sudo su - cdp -c", " cd #{ansible_home}/#{ec2};ansible-playbook ec2-provision.yml -e type=servers -e site1=#{site}  -e site2=#{environment} -e site_id=#{site_id} --tags \"appserver1_az1\" -v"],
				"working_directory": null
			}
		]
	}]
}],
"stages": [
{ 
	"name": "Liferay-JBoss",
	"fetchMaterials": "false",
	"jobs": [
	{
		"name": "Liferay-JBoss-Configuration",
		"resources": ["Build", "Manager"],
		"tasks": [
		{
			"type": "exec",
			"run_if": "passed",
			"on_cancel" : null,
			"command": "echo",
			"arguments": "Liferay-JBoss Installation",
			"working_directory": null
		},
		{
			"type": "exec",
			"run_if": "passed",
			"on_cancel" : null,
			"command": "script",
			"arguments": [ "echo sudo su - cdp -c ","cd #{ansible_home}/#{softwares};ansible-playbook liferay-jboss.yml -i inventory/hosts_#{environment} -e type=softwares -e site1=#{site} -e site2=#{environment} -e site_id=#{site_id} -v ","sudo su - cdp -c", "cd #{ansible_home}/#{softwares};ansible-playbook liferay-jboss.yml --limit appserver1_az1 -i inventory/hosts_#{environment} -e type=softwares -e site1=#{site} -e site2=#{environment} -e site_id=#{site_id} -v " ],
			"working_directory": null
		}]
	}]
}],
"stages": [
{ 
	"name": "APM",
	"fetchMaterials": "false",
	"jobs": [
	{
		"name": "APM",
		"resources": ["Build", "Manager"],
		"tasks": [
		{
			"type": "exec",
			"run_if": "passed",
			"on_cancel" : null,
			"command": "echo",
			"arguments": "splunk configuraiton",
			"working_directory": null
		},
		{
			"type": "exec",
			"run_if": "passed",
			"on_cancel" : null,
			"command": "script",
			"arguments": ["echo sudo su - cdp -c 'cd #{ansible_home}/#{softwares}/apm;ansible-playbook app.yml --limit appserver1_az1 -i ../inventory/hosts_#{environment} -e vf=toll -e site=#{apm} -e system=CES -e sname=S1 --tags \"splunk_ces_appserver,dtagent\" -v'" , "echo sudo su - cdp -c 'cd #{ansible_home}/#{softwares}/apm;ansible-playbook app.yml --limit appserver2_az2 -i ../inventory/hosts_#{environment} -e vf=toll -e site=#{apm} -e system=CES -e sname=S2 --tags \"splunk_ces_appserver,dtagent\" -v'" ],
			"working_directory": null
		}]
	}]
}]
}
